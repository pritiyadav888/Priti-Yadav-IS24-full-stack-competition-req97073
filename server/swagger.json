{
    "openapi": "3.0.0",
    "info": {
      "title": "Swagger Documentation IMB Api's",
      "description": "This is a sample API documentation for a MEAN stack web app.",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://localhost:3000/api"
      }
    ],
    "paths": {
        "/health": {
            "get": {
              "summary": "Check the status of the API",
              "description": "Returns the status of the API.",
              "responses": {
                "200": {
                  "description": "The API is up and running.",
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "/products": {
            "get": {
              "summary": "Get all products",
              "description": "Returns all products.",
              "responses": {
                "200": {
                  "description": "A list of all products",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Product"
                        }
                      }
                    }
                  }
                }
              }
            },
            "post": {
              "summary": "Create a new product",
              "description": "Creates a new product.",
              "requestBody": {
                "description": "The product object.",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "The created product",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "/products/{id}": {
            "get": {
              "summary": "Get a product by ID",
              "description": "Returns the product with the specified ID.",
              "parameters": [
                {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "The ID of the product",
                  "schema": {
                    "type": "integer"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "The product",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                },
                "404": {
                  "description": "Product not found"
                }
              }
            },
            "put": {
                "summary": "Update a product by ID",
                "description": "Updates the product with the specified ID.",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the product",
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "requestBody": {
                  "description": "The updated product object.",
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ProductUpdate"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "The updated product",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Product"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Product not found"
                  }
                }
              },
            "delete": {
                "summary": "Delete a product by ID",
                "description": "Deletes the product with the specified ID.",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the product to delete.",
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "204": {
                    "description": "Product deleted successfully"
                  },
                  "404": {
                    "description": "Product not found"
                  }
                }
              }
          }
          
    
    },
    "components": {
        "schemas": {
          "Product": {
            "type": "object",
            "properties": {
                "productName": {
                    "type": "string",
                    "description": "The name of the product",
                    "default": "Product 40"
                  },
                  "productOwnerName": {
                    "type": "string",
                    "description": "The name of the product owner",
                    "default": "Product Owner 40"
                  },
                  "developers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of developer names",
                    "default": ["Developer 40_1", "Developer 40_2", "Developer 40_3"]
                  },
                  "scrumMasterName": {
                    "type": "string",
                    "description": "The name of the scrum master",
                    "default": "Scrum Master 40"
                  },
                  "startDate": {
                    "type": "string",
                    "description": "The start date of the project in the format YYYY/MM/DD",
                    "default": "2019/10/11",
                    "pattern": "^\\d{4}/\\d{2}/\\d{2}$"
                  },
                  "methodology": {
                    "type": "string",
                    "description": "The methodology used for the project. Can be 'Agile' or 'Waterfall'",
                    "default": "Waterfall"
                  }
            },
            "required": [
              "productId",
              "productName",
              "productOwnerName",
              "developers",
              "scrumMasterName",
              "startDate",
              "methodology"
            ]
          },
          "ProductUpdate": {
            "type": "object",
            "properties": {
              "productName": {
                "type": "string",
                "description": "The name of the product",
                "default": "Product 40"
              },
              "productOwnerName": {
                "type": "string",
                "description": "The name of the product owner",
                "default": "Product Owner 40"
              },
              "developers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "An array of developer names",
                "default": ["Developer 40_1", "Developer 40_2", "Developer 40_3"]
              },
              "scrumMasterName": {
                "type": "string",
                "description": "The name of the scrum master",
                "default": "Scrum Master 40"
              },
              "startDate": {
                "type": "string",
                "description": "The start date of the project in the format YYYY/MM/DD",
                "default": "2019/10/11",
                "pattern": "^\\d{4}/\\d{2}/\\d{2}$"
              },
              "methodology": {
                "type": "string",
                "description": "The methodology used for the project. Can be 'Agile' or 'Waterfall'",
                "default": "Waterfall"
              }
            },
            "required": [
              "productId"
            ]
          }
          
        }
      }
      
  }
  